# import streamlit as st
# from components import home, land_prediction, strategy, methodology, about, recommendations, taxes, social
# # from pages import home, page1, page2

# # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
# st.set_page_config(
#     page_title="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É",
#     page_icon="üèôÔ∏è",
#     layout="centered",
#     initial_sidebar_state="collapsed"
# )

# # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
# if 'current_page' not in st.session_state:
#     st.session_state.current_page = "–ì–ª–∞–≤–Ω–∞—è"

# # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
# def show_page(page_name):
#     if page_name == "–ì–ª–∞–≤–Ω–∞—è":
#         home.app()
#     elif page_name == "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å":
#         social.app()
#     elif page_name == "–ë–∏–∑–Ω–µ—Å":
#         land_prediction.app()
#     elif page_name == "–ë–ª–∞–≥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ":
#         strategy.app()
#     elif page_name == "–£—á–∞—Å—Ç–∫–∏ —Ä–µ–Ω–æ–≤–∞—Ü–∏–∏":
#         recommendations.app()
#     elif page_name == "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã":
#         taxes.app()
#     elif page_name == "–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–µ–º–ª–∏":
#         land_prediction.app()
#     elif page_name == "–ù–∞–ª–æ–≥–∏":
#         taxes.app()
#     elif page_name == "–†–∞–∑–≤–∏—Ç–∏–µ":
#         strategy.app()

# # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# def app():
#     show_page(st.session_state.current_page)

# if __name__ == "__main__":
#     app()
###############################################################################################

# import streamlit as st
# from pages import home, page1, page2

# # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
# st.set_page_config(
#     page_title="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É",
#     page_icon="üèôÔ∏è",
#     layout="centered",
#     initial_sidebar_state="collapsed"
# )

# # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è session state –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
# if 'current_page' not in st.session_state:
#     st.session_state.current_page = "Home"

# # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
# def show_page(page_name):
#     if page_name == "Home":
#         home.app()
#     elif page_name == "Page1":
#         page1.app()
#     elif page_name == "Page2":
#         page2.app()

# # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# def app():
#     show_page(st.session_state.current_page)

# if __name__ == "__main__":
#     app()
####################################################################
# import streamlit as st
# from components import home, land_prediction, strategy, methodology, about, recommendations, taxes, social

# # Set page configuration
# st.set_page_config(
#     page_title="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ –≥–æ—Ä–æ–¥—É",
#     page_icon="üèôÔ∏è",
#     layout="centered",
#     initial_sidebar_state="collapsed"
# )

# # Initialize session state for managing the current page
# if 'current_page' not in st.session_state:
#     st.session_state.current_page = "home"

# # Function to display the current page
# def show_page(page_name):
#     if page_name == "home":
#         home.app()
#     elif page_name == "land_prediction":
#         land_prediction.app()
#     elif page_name == "strategy":
#         strategy.app()
#     elif page_name == "methodology":
#         methodology.app()
#     elif page_name == "about":
#         about.app()
#     elif page_name == "recommendations":
#         recommendations.app()
#     elif page_name == "taxes":
#         taxes.app()
#     elif page_name == "social":
#         social.app()

# # Main logic of the application
# def app():
#     query_params = st.query_params
#     if 'page' in query_params:
#         st.session_state.current_page = query_params['page'][0]
#     show_page(st.session_state.current_page)

# if __name__ == "__main__":
#     app()


import streamlit as st

# Define page functions
def home_page():
    st.title("–ì–ª–∞–≤–Ω–∞—è")
    st.write("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É.")
    if st.button("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–Ω–∞–ª–∏–∑–∞"):
        st.session_state.page = "analysis"
    if st.button("–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"):
        st.session_state.page = "statistics"

def analysis_page():
    st.title("–ê–Ω–∞–ª–∏–∑")
    st.write("–≠—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–Ω–∞–ª–∏–∑–∞.")
    if st.button("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é"):
        st.session_state.page = "home"

def statistics_page():
    st.title("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    st.write("–≠—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.")
    if st.button("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é"):
        st.session_state.page = "home"

# Initialize session state
if "page" not in st.session_state:
    st.session_state.page = "home"

# Render the current page
if st.session_state.page == "home":
    home_page()
elif st.session_state.page == "analysis":
    analysis_page()
elif st.session_state.page == "statistics":
    statistics_page()
